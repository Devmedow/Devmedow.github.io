#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <GL/gl.h>
#include <GLFW/glfw3.h>
#include <emscripten/emscripten.h>
#include <emscripten/html5.h>

GLFWwindow* window;
float clearColor[3] = {0.2f, 0.3f, 0.4f};

// Generate a random clear color
void randomize_clear_color() {
    clearColor[0] = (float)(rand() % 1000) / 1000.0f;
    clearColor[1] = (float)(rand() % 1000) / 1000.0f;
    clearColor[2] = (float)(rand() % 1000) / 1000.0f;
}

// Mouse button callback
void mouse_button_callback(GLFWwindow* window, int button, int action, int mods) {
    if (action == GLFW_PRESS) {
        randomize_clear_color();
    }
}

// Key press callback
void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods) {
    if (action == GLFW_PRESS) {
        randomize_clear_color();
    }
}

// Main render loop
void render() {
    int width, height;
    emscripten_get_canvas_element_size("#canvas", &width, &height);
    glViewport(0, 0, width, height);

    glClearColor(clearColor[0], clearColor[1], clearColor[2], 1.0f);
    glClear(GL_COLOR_BUFFER_BIT);

    glBegin(GL_TRIANGLES);
    glColor3f(1.0, 0.0, 0.0); glVertex2f(-0.5f, -0.5f);
    glColor3f(0.0, 1.0, 0.0); glVertex2f( 0.5f, -0.5f);
    glColor3f(0.0, 0.0, 1.0); glVertex2f( 0.0f,  0.5f);
    glEnd();

    glfwSwapBuffers(window);
    glfwPollEvents();
}

int main() {
    srand(time(NULL));

    if (!glfwInit()) {
        fprintf(stderr, "Failed to initialize GLFW\n");
        return 1;
    }

    window = glfwCreateWindow(640, 480, "Input Triangle", NULL, NULL);
    if (!window) {
        fprintf(stderr, "Failed to create window\n");
        glfwTerminate();
        return 1;
    }

    glfwMakeContextCurrent(window);

    // Set input callbacks
    glfwSetKeyCallback(window, key_callback);
    glfwSetMouseButtonCallback(window, mouse_button_callback);

    emscripten_set_main_loop(render, 0, 1);
    return 0;
}
